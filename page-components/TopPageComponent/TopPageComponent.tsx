import React, {useReducer} from 'react';import {TopPageComponentProps} from "./TopPageComponent.props";import {Advantages, HhData, Htag, Sort, Tag,Product} from "../../components";import styles from './TopPageComponent.module.css';import {TopLevelCategory} from "../../interfaces/page.interface";import parse from 'html-react-parser';import {SortEnum} from "../../components/Sort/sort.props";import {sortReducer} from "./sort.reducer";const TopPageComponent = ({page,products,firstCategory}:TopPageComponentProps):JSX.Element => {    const [{products:sortedProducts,sort}, dispatchSort] = useReducer(sortReducer,{products,sort:SortEnum.Rating});    const setSort =(sort:SortEnum) => {        dispatchSort({type:sort});    };    return (        <div className={styles.wrapper}>            <div className={styles.title}>                <Htag tag={'h1'} >{page.title}</Htag>                {products && <Tag color="gray" size="md">{products.length}</Tag>}                <Sort sort={sort} setSort={setSort} />            </div>            <div>                {sortedProducts && sortedProducts.map((p)=>(                    <Product key={p._id} product={p}/>                ))}            </div>            <div className={styles.hhTitle}>                <Htag tag={'h2'} >Careers - {page.category}</Htag>                <Tag color="red" size="md">hh.ru</Tag>            </div>            {firstCategory == TopLevelCategory.Courses && page.hh && <HhData {...page.hh}/>}            {page.advantages && page.advantages.length > 0 && <>                <Htag tag={'h2'}>Advantages</Htag>                <Advantages advantages={page.advantages} />            </>}            {page.seoText && page.seoText.length > 0 &&                <div className={styles.seo}>                    {parse(page.seoText)}                </div>}            <Htag tag={'h2'}>Acquired Skills</Htag>            {page.tags && page.tags.map((tag)=><Tag key={tag} color="primary">{tag}</Tag>)}        </div>    );};export default TopPageComponent;